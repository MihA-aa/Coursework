
@using Coursework.Models
@model Instruction
@{
    ViewBag.Title = "Details";
}
<style>
    #infa {
        width: 30%;
        float: left;
        margin-right: 50px;
        margin-left: 10px;
        border: 1px #e6e6fa solid;
        padding: 10px;
    }

    #wrapper {
        overflow: hidden;
        padding-bottom: 10px;
        margin-bottom: 10px;
        border: 1px #2f4f4f solid;
    }

    .sortable {
        list-style-type: none;
        margin: 0;
        padding: 0;
        min-height: 150px;
        max-width: 650px;
        border: ridge;
    }

    #steps {
        float: left;
    }

    #stepsi {
        float: left;
        overflow: hidden;
    }

    .sortable li {
        margin: 0px 5px 60px 5px;
        padding: 1px;
        float: left;
        width: 120px;
        height: 120px;
        text-align: center;
    }

    span.button30 {
        position: relative;
        z-index: 1;
        display: inline-block;
        width: 1.3em;
        height: 1.3em;
        line-height: 1.3em;
        vertical-align: middle;
        text-align: center;
        text-decoration: none;
        text-shadow: 1px 1px rgba(255, 255, 255, .3);
        font-size: 300%;
        font-weight: 900;
        color: #000;
        border-radius: 100%;
        background: rgb(144, 142, 105) linear-gradient(rgb(185, 181, 151), rgb(144, 142, 105));
        box-shadow: inset 0 -2px 1px rgba(0, 0, 0, .5), inset 0 2px 1px rgba(255, 255, 255, .9), 0 4px 4px rgba(0, 0, 0, .9);
    }

    span.button30:after {
        content: "";
        position: absolute;
        z-index: -1;
        top: 12%;
        left: 12%;
        right: 12%;
        bottom: 12%;
        border-radius: 100%;
        background: rgb(242, 203, 20) linear-gradient(rgb(242, 203, 20), rgb(255, 182, 7));
        box-shadow: inset 0 2px 1px rgba(0, 0, 0, .5), inset 0 -2px 1px rgba(255, 255, 255, .3);
    }

    span.boxclose {
        float: right;
        cursor: pointer;
        color: #fff;
        border: 1px solid #AEAEAE;
        border-radius: 30px;
        background: #605F61;
        font-size: 31px;
        font-weight: bold;
        display: inline-block;
        line-height: 0px;
        padding: 11px 3px;
    }

    .boxclose:before {
        content: "×";
    }
    .closeform {
        position: relative;
        top: 20px;
        left: 70px;
    }
    .size-27 {
        font-size: 25px;
    }
    .btn-mine {
        padding: 2px 12px;
    }
    .field-validation-error {
    color: #b94a48;
}
 
.field-validation-valid {
    display: none;
}
 
input.input-validation-error {
    border: 1px solid #b94a48;
}
 
input[type="checkbox"].input-validation-error {
    border: 0 none;
}
 
.validation-summary-errors {
    color: #b94a48;
}
 
.validation-summary-valid {
    display: none;
}
    .str1 {
        position: relative;
        top: -18px;
    }
    .linkBack{
        color: black;
        text-decoration: none;
    }
    .linkBack:hover{
        color: black;
        text-decoration: none;
    }

</style>
<h2>@Model.InstructionName</h2>
    <div id="wrapper">
        <div id="infa">
            @using (Html.BeginForm("SaveInstructionDescription", "Home", FormMethod.Post, new { style = "display: inline-block;" }))
            {
                <h3>Редактировать описания</h3>
                @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            <div class="editor-label">
                <b>@Html.LabelFor(model => model.InstructionName)</b>
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.InstructionName)
                @Html.ValidationMessageFor(model => model.InstructionName)
            </div>
            <br/>
                <div class="editor-label">
                    <b>@Html.LabelFor(model => model.Category.СategoryName)</b>
                </div>
                @Html.DropDownListFor(model => model.CategoryId, ViewBag.Categories as SelectList)
            <br/>
            <div class="editor-label">
                <b>@Html.LabelFor(model => model.LinkToVideo)</b>
            </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LinkToVideo)
                    @Html.ValidationMessageFor(model => model.LinkToVideo)
                </div>
                <br/>
                <div class="editor-label">
                    <b>@Html.LabelFor(model => model.Tags)</b>
                </div>
                foreach (Tag c in ViewBag.Tags)
                {
                    <input type="checkbox" name="selectedTags" value="@c.Id"
                           @(Model.Tags.Contains(c) ? "checked=\"checked\"" : "") />@c.TagName <br />
                }
            <br/>
            <button type="submit" class="btn btn-default btn-mine">
                <span class="fi-save" style="font-size: 18px;"> Save </span>
            </button>
            <button class="btn btn-default btn-mine">
                <span class="fi-x" style="font-size: 18px;">
                    @Html.ActionLink(" Cancel ", "ShowInstructions", "Home", new { user_id = Model.UserId }, new { @class = "linkBack" })
                </span>
            </button>
            }
        </div>
        <div id="stepsi">
            @using (Ajax.BeginForm("StepsPartial", new {id = Model.Id}, new AjaxOptions {UpdateTargetId = "results", LoadingElementId = "loading"}))
            {
                <input type="submit" value="Обновить" style="display: none;" id="qwer"/>
            }
            <div id="loading" style="display: none;">
                <img src="@Href("~/Content/default.gif")" style="display: table;margin: 0 auto;" />
            </div>
            <div id="results"></div>
        </div>
    </div>

@section scripts{
    <script type="text/javascript">
        $('#qwer').click();
        
    </script>
}
